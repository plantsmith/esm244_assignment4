---
title: "Cluster Analysis of Stream Chemistry Data"
author: "Natalie Smith"
format: 
  html:
    code-fold: true
    toc: true
    number-sections: true
    embed-resources: true
theme: Lux
editor: visual
execute:
  echo: true
  message: false
  warning: false
bibliography: references.bib
---

# Overview

This report analyzes stream chemistry data from the Santa Barbara Coastal drainage area, collected by the Santa Barbara Coastal LTER. The data was wrangled to handle missing values before applying hierarchical clustering to identify natural groupings. The aim is to understand similarities and relationships among different stream sites based on their chemical compositions.

![Santa Barbara, SBC LTER](images/stream.jpeg) Santa Barbara, Source: [SBC LTER](https://sbc.lternet.edu/)

# Load Libraries:

```{r}
library(here)
library(tidyverse)
library(NbClust)
library(cluster)
library(factoextra)
library(dendextend)
library(ggdendro)

```

# Import:

Load in the data and convert all -999 values to NAs.

```{r}
#  Load the data and convert -999 values to NA
stream_df<- read.csv(here("data", "sbc_lter_registered_stream_chemistry.csv"), na = c('-999'))

```

# Data Wrangling and Summary:

To address the numerous NAs in the dataset, columns with over 50% missing values need to be identified and dropped. I achieve this by setting a 50% threshold and creating a conditional statement. Next, the mean for the remaining variables per site can be calculated using summarize() with na.rm = TRUE. This approach retains important information while ensuring a comprehensive overview of the dataset.

```{r}

# summary(stream_df)

# Drop columns with >50% NA values
na_50 <- nrow(stream_df) * 0.5  # 50% threshold
stream_df_clean <- stream_df %>%
  select(where(~sum(is.na(.)) < na_50))  # Keep columns with <50% NA values

# Summary with means per site
summary_stream <- stream_df_clean %>%
  group_by(site_code) %>%
  summarize(across(everything(), mean, na.rm = TRUE)) %>% 
  select(-"timestamp_local")

```

# Scaling:

To ensure variables equally contribute to the distance calculations and cluster assignments, I will scale the data and select only the numeric columns.

```{r}
#Scale numeric
summary_stream_scaled <- summary_stream %>% 
  select(2:7) %>% 
  scale()

# summary(summary_stream_scaled)

```

# Hierarchial Clustering:

Before we perform hierarchical clustering, I need to calculate the distance between the observations (stream sites) based on the stream characteristics. I will use the dist() function and 'euclidean' method.

To perform hierarchical clustering on the obtained distance, I will use hclust() to create clusters based on their distances, selecting 'complete' as the linkage method, which clusters by smallest maximum distance. I will then run the analysis again using the 'single' linkage method, which considers the shortest distance between any points.

```{r}

# Distance
distance_stream <- dist(summary_stream, method = 'euclidean')

# Hierarchical clustering
hclust_stream <- hclust(distance_stream, method = "complete")
hclust_stream_single <- hclust(distance_stream, method = "single")


# # Dendrogram
# plot(hclust_stream, cex = 0.6, hang = -1)

```

# Dendrograms:

```{r}
#| label: fig-complete-dendo
#| fig-cap: 'The complete linkage dendrogram highlights clear groupings of stream sites at various levels, including two prominent clusters around the 2000 mark on the y-axis. Additionally, it reveals six clusters, with two distinct groups showing closely positioned data points. Notably, stream sites 3 and 4 stand out as distinctly separate from the rest.'
#complete
ggdendrogram(hclust_stream, rotate = FALSE) +
  theme_minimal() +
  labs(x = "", y = " ") +
        theme(panel.grid.major = element_blank(), # Hide gridlines
        panel.grid.minor = element_blank()) # Hide axis grid
```

```{r}
#| label: fig-single-dendo
#| fig-cap: 'The Single Dendrogram showcases elongated clusters among stream sites, indicating potential sensitivity to outliers and noise within the dataset.'
#single
ggdendrogram(hclust_stream_single, rotate = FALSE) +
  theme_minimal() +
  labs(x = "", y = " ") +
        theme(panel.grid.major = element_blank(), # Hide gridlines
        panel.grid.minor = element_blank()) # Hide axis grid
```

# Tanglegram:

```{r}
#| label: fig-tanglegram
#| fig-cap: 'The tanglegram depicts the relationship between two dendrograms. Solid lines denote consistent clusters, dotted lines mark inconsistent ones, and grey lines highlight tangled and inconsistent clusters between the two dendrograms.'

# Tanglegram
tanglegram(
  as.dendrogram(hclust_stream),
  as.dendrogram(hclust_stream_single),
  lwd = 2,
  lty = 1,
  margin_inner = 5,
  margin_outer = 5)

```

# Summary:

-   Complete Dendrogram: When looking at the dendrogram using complete linkage, I notice clear groups forming at different levels. Around the 2000 mark on the y-axis, I can see two groups, and as I move down the y-axis, I see a total of six clusters. Additionally, the dendrogram reveals two distinct clusters with closely positioned data points, suggesting a higher similarity in their characteristics. The stream data from site 3 and 4 appear to be distinctly separate from the rest.

-   Single Dendrogram: While the dendrogram exhibits a similar overall shape to the complete linkage method, the clusters appear elongated, losing some of the balanced clustering seen in the complete model. This behavior is often attributed to the sensitivity of single linkage clustering to outliers and noise within the dataset.

-   The tanglegram illustrates the relationship between the two dendrograms. The solid lines represent the clusters that are consistent between the two dendrograms, while the dotted lines represent the clusters that are not consistent. Additionally, The grey lines indicate "tangled" and inconsistent clusters between the two dendrograms.

# References:

LTER, Santa Barbara Coastal, and John M Melack. 2019. “SBC LTER: Land: Stream Chemistry in the Santa Barbara Coastal Drainage Area, Ongoing Since 2000.” Environmental Data Initiative. https://doi.org/10.6073/PASTA/67A558A24CEED9A0A5BF5E46AB841174.
